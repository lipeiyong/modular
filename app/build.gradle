plugins {
    id 'com.android.application'
}

android {
    compileSdk build_versions.compile_sdk

    defaultConfig {
        applicationId "com.lpy.modular"
        minSdk build_versions.min_sdk
        targetSdk build_versions.target_sdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                //ARouter
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

    buildFeatures {
        //用于生成 BuildConfig 文件
        buildConfig true
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
}

//测试
dependencies {
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

//网络请求
dependencies {
    implementation "$deps.okhttp.okhttp"
    implementation "$deps.retrofit.runtime"
    implementation "$deps.retrofit.gson"
    implementation 'com.google.code.gson:gson:2.8.9'
}

//jetpack
dependencies {
    //room
    implementation "$deps.room.runtime"
    annotationProcessor "$deps.room.compiler"
}

//组件库
dependencies {
    implementation project(':common')
    implementation project(':communication')

    if (!isRunModuleA.toBoolean()) {
        implementation project(':moduleA')
    }
    if (!isRunModuleB.toBoolean()) {
        implementation project(':moduleB')
    }
    if (!isRunModuleC.toBoolean()) {
        implementation project(':moduleC')
    }
}

//其他
dependencies {
    //glide
    implementation 'com.github.bumptech.glide:glide:4.15.1'
    //二维码扫描
    implementation 'com.google.zxing:core:3.3.3'
    //动态路由
    annotationProcessor "$deps.arouter.compiler"

    implementation 'com.lpy.modular:common:1.0.0'
}

